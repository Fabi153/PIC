package view;

import handler.Elementhandlers;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.BoxLayout;
import javax.swing.JPanel;
import javax.swing.JList;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import java.awt.Component;
import java.util.Vector;

import javax.swing.JScrollPane;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;

import logic.Interpreter;
import logic.Register;

public class ViewBox extends JFrame{

	public static JFrame frame;
	//private JTable quellcodeTable;
	private String[] quellcode;
	private JTable table;
	public int[] befehlscode;
	
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					ViewBox window = new ViewBox();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public ViewBox() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		 
		frame = new JFrame();
		frame.setBounds(100, 100, 1000, 750);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		
//		***Hauptmenü***		
		
		JMenuBar menuBar = new JMenuBar();
		frame.setJMenuBar(menuBar);
		
		JMenu mainmenu = new JMenu("Men\u00FC");
		menuBar.add(mainmenu);
		
//		***Hauptmenüelemente***		
		
		JMenuItem buttonReadcode= new JMenuItem("Datei \u00F6ffnen");
		mainmenu.add(buttonReadcode);
		
		JMenuItem buttonClose = new JMenuItem("Programm schlie\u00DFen");
		mainmenu.add(buttonClose);
		
//		***Buttons***
		
		JButton btnStart = new JButton("Start"); // Start-Button
		btnStart.setBounds(276, 11, 89, 23);
		frame.getContentPane().add(btnStart);
		
		JButton btnStepByStep = new JButton("Step by Step");
		btnStepByStep.setBounds(55, 67, 110, 25);
		frame.getContentPane().add(btnStepByStep);
		
		
//		***Anzeige für Code***		
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(375, 10, 600, 400);
		frame.getContentPane().add(scrollPane);
		table = new JTable();
		table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		
		scrollPane.setViewportView(table);
		
//		***Actionlisteners*** --> Schnittstellen zu Elementhandlers	
		
		btnStart.addActionListener(new ActionListener() { 			// Start-Button
			
			 public void actionPerformed(ActionEvent e){
				 
				 Elementhandlers.buttonStart(befehlscode);
				
			}
				
		});
		
		btnStepByStep.addActionListener(new ActionListener() { 		// Step-Button
			
			 public void actionPerformed(ActionEvent e){
				 
				 Elementhandlers.buttonStep(befehlscode);
				
			}
				
		});
		
		buttonReadcode.addActionListener(new ActionListener() {		//Load-Button
			 
            public void actionPerformed(ActionEvent e)
            {
            	String filename = null;
            	String dir = null;
            	JFileChooser c = new JFileChooser();
                // Demonstrate "Open" dialog:
                int rVal = c.showOpenDialog(ViewBox.this);
                if (rVal == JFileChooser.APPROVE_OPTION) {
                  filename= c.getSelectedFile().getName();
                  dir = c.getCurrentDirectory().toString();
                }
                if (rVal == JFileChooser.CANCEL_OPTION) {
                  filename= null;
                  dir= null;
                }
                if (filename != null || dir != null){
                quellcode = Elementhandlers.loadFile(filename,dir);
                befehlscode = Elementhandlers.convertStringFileToIntFile(quellcode); // In diesem Array werden die Befehlscodes gespeichert
                Object[][] data= new Object[quellcode.length][2];					// befehlscode oben deklariert
                Object[] columns={"BP","Quellcode"};
                for (int i=0;i<quellcode.length;i++){ // "<=" hinzugefügt, ansonsten eine zeile zu wenig? syso(i)
                	data[i][0]=false;
                	data[i][1]=quellcode[i];
                    
                	}
                //updateTabelle(); // Databinding
                DefaultTableModel tablemodel = new DefaultTableModel(data,columns) {
                    @Override
					public
                    Class<?> getColumnClass(int columnIndex) {
                        return columnIndex == 0 ? Boolean.class : super.getColumnClass(columnIndex);
                    }
                };                
                table.setModel(tablemodel);
             // Erste Spalte auf 100 Pixel Breite setzen:
        		TableColumn col1 = table.getColumnModel().getColumn(0);
        		col1.setPreferredWidth(30);
        		TableColumn col2 = table.getColumnModel().getColumn(1);
        		col2.setPreferredWidth(552);
                
                }
            }
        });      
		
		
//		***Register-Objekt initialisieren ***
		
		
	}

	private String[] headlines={"Debug","Qellcode"}; // Not used?
}
